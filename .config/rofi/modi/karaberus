#!/usr/bin/env python
import gzip
import json
import os
import subprocess
import sys
from dataclasses import dataclass
from pathlib import Path
from typing import TypedDict
from urllib.request import Request, urlopen


@dataclass
class KaraberusConfig:
    host: str
    token: str


def get_config():
    config_dir = Path(os.environ["XDG_CONFIG_HOME"])
    mpv_karaberus_conf = config_dir / "mpv" / "script-opts" / "karaberus.conf"

    host = "https://karaberus.japan7.bde.enseeiht.fr"
    token = ""

    with mpv_karaberus_conf.open() as f:
        for line in f:
            if line.startswith("host="):
                host = line[len("host=") :].strip()
            if line.startswith("token="):
                token = line[len("token=") :].strip()

    assert token
    return KaraberusConfig(host=host, token=token)


def get_kid():
    return int(os.environ["ROFI_INFO"])


def get_rofi_retv():
    return int(os.environ["ROFI_RETV"])


class KaraberusObject(TypedDict):
    ID: int


class KaraberusMedia(KaraberusObject):
    name: str


class KaraberusArtist(KaraberusObject):
    Name: str


class KaraberusKara(TypedDict):
    ID: int
    Title: str
    SourceMedia: KaraberusMedia | None
    Artists: list[KaraberusArtist]
    Medias: list[KaraberusMedia]


class KaraberusKaras(TypedDict):
    Karas: list[KaraberusKara]


def get_karas() -> KaraberusKaras:
    conf = get_config()
    headers = {"Authorization": f"Bearer {conf.token}", "Accept-Encoding": "gzip"}
    url = f"{conf.host}/api/kara"
    req = Request(url, headers=headers)
    resp = urlopen(req)

    if resp.headers.get("Content-Encoding", "") == "gzip":
        return json.load(gzip.open(resp))

    return json.load(resp)


def set_prompt():
    print("\0prompt\x1fkaraberus")


def send_kara_entries():
    karas = get_karas()["Karas"]
    for kara in karas:
        parts = [kara["Title"]]

        if kara["SourceMedia"]:
            parts.append(kara["SourceMedia"]["name"])

        artist_names = [a["Name"] for a in kara["Artists"]]
        if artist_names:
            parts.append(", ".join(artist_names))

        media_names = [m["name"] for m in kara["Medias"]]
        if media_names:
            parts.append(", ".join(media_names))

        print(f"{" - ".join(parts)}\0info\x1f{kara["ID"]}")


def play_kara():
    kid = get_kid()
    conf = get_config()
    cmd = "umpv", f"{conf.host}/karaoke/browse/{kid}"
    _ = subprocess.Popen(
        cmd, start_new_session=True, stdout=subprocess.PIPE, stdin=subprocess.PIPE
    )
    sys.exit()


def main():
    retv = get_rofi_retv()
    if retv == 0:
        set_prompt()
        send_kara_entries()
    else:
        play_kara()


if __name__ == "__main__":
    main()
